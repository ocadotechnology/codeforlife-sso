name: Main

on:
  push:
    paths-ignore:
      - "README.md"
      - "CHANGELOG.md"
      - "LICENSE"
      - ".gitignore"
      - ".vscode"
  workflow_dispatch:

env:
  SERVICE_NAME: sso
  PYTHON_VERSION: 3.8

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: üõ´ Checkout
        uses: actions/checkout@v3

      - name: üêç Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      
      - name: Install Python Packages
        working-directory: ./backend
        run: |
          python -m pip install --upgrade pip
          python -m pip install pipenv
          pipenv install --dev

      - name: Check Code Format
        working-directory: ./backend
        run: if ! pipenv run black --check .; then exit 1; fi
  
      # TODO: figure out why migrations are out of sync in old repos.
      # - name: Check Migrations
      #   working-directory: ./backend
      #   run: pipenv run python manage.py makemigrations --check --dry-run
  
      # TODO: assert code coverage target.
      - name: Test Code Units
        working-directory: ./backend
        run: pipenv run pytest

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: [test]
    if: github.ref_name == 'production' || github.ref_name == 'development' || github.ref_name == 'staging'
    steps:
      - name: üõ´ Checkout
        uses: actions/checkout@v3

      - name: üêç Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: üóù Authenticate with GCloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: ü§ñ Set up GCloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: üõ† Install Backend Dependencies
        working-directory: ./backend
        run: |
          python -m pip install --upgrade pip
          python -m pip install pipenv
          pipenv install

      - name: üõ† Generate requirements.txt
        working-directory: ./backend
        run: pipenv requirements > requirements.txt

      # https://mikefarah.gitbook.io/yq/
      - name: üñäÔ∏è Configure App Deployment
        uses: mikefarah/yq@master
        with:
          cmd: |
            SERVICE_NAME=$(
              if [ ${{ github.ref_name }} == "production" ]
              then echo ${{ env.SERVICE_NAME }}
              else echo ${{ github.ref_name }}-${{ env.SERVICE_NAME }}
              fi
            )

            yq -i '
              .service = "${{ github.ref_name }}-${{ env.SERVICE_NAME }}" |
              .env_variables.SERVICE_NAME = "$SERVICE_NAME"
            ' backend/app.yaml

      - name: üöÄ Deploy App on GCloud
        working-directory: ./backend
        run: gcloud app deploy
